name: 'Expo Caches'
description: 'Composite action to perform cache related tasks.'

inputs:
  yarn-workspace:
    description: 'Restore yarn workspace cache'
    required: false
  yarn-tools:
    description: 'Restore yarn /tools cache'
    required: false
  yarn-docs:
    description: 'Restore yarn /docs cache'
    required: false
  ios-pods:
    description: 'Restore /ios pods cache'
    required: false
  bare-expo-pods:
    description: 'Restore /apps/bare-expo/ios pods cache'
    required: false
  gradle:
    description: 'Restore Gradle cache'
    required: false
  avd:
    description: 'Restore AVD cache'
    required: false
  avd-api:
    description: 'API version used in AVD'
    default: '31'
    required: false
  ndk:
    description: 'Restore NDK cache'
    required: false
  ndk-version:
    description: 'NDK version used'
    default: '21.4.7075529'
    required: false
  git-lfs:
    description: 'Restore Git LFS cache'
    required: false

outputs:
  yarn-workspace-hit:
    description: 'Returns true, if yarn workspace cache is up-to-date'
    value: steps.workspace-modules-cache.outputs.cache-hit
  yarn-tools-hit:
    description: 'Returns true, if yarn /tools cache is up-to-date'
    value: steps.tools-modules-cache.outputs.cache-hit
  yarn-docs-hit:
    description: 'Returns true, if yarn /docs cache is up-to-date'
    value: steps.docs-modules-cache.outputs.cache-hit
  ios-pods-hit:
    description: 'Returns true, if /ios pods cache is up-to-date'
    value: steps.ios-pods-cache.outputs.cache-hit
  bare-expo-pods-hit:
    description: 'Returns true, if /apps/bare-expo/ios pods cache is up-to-date'
    value: steps.bare-expo-pods-cache.outputs.cache-hit
  avd-hit:
    description: 'Returns true, if AVD cache is up-to-date'
    value: steps.avd-cache.outputs.cache-hit
  git-lfs-hit:
    description: 'Returns true, if Git LFS cache is up-to-date'
    value: steps.git-lfs-cache.outputs.cache-hit

runs:
  using: 'composite'
  steps:
    - name: üîçÔ∏è Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
      shell: bash
    - name: ‚ôªÔ∏è Restore workspace node modules
      if: inputs.yarn-workspace == 'true'
      uses: actions/cache@v2
      id: workspace-modules-cache
      with:
        # See "workspaces" ‚Üí "packages" in the root package.json for the source of truth of
        # which node_modules are affected by the root yarn.lock
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          node_modules
          apps/*/node_modules
          home/node_modules
          packages/*/node_modules
          packages/@expo/*/node_modules
          react-native-lab/react-native/node_modules
        key: ${{ runner.os }}-workspace-modules-${{ hashFiles('yarn.lock') }}

    - name: ‚ôªÔ∏è Restore /tools node modules and bins
      if: inputs.yarn-tools == 'true'
      uses: actions/cache@v2
      id: tools-modules-cache
      with:
        path: |
          bin/et
          bin/expotools
          tools/node_modules
        key: ${{ runner.os }}-tools-modules-${{ hashFiles('tools/yarn.lock') }}

    - name: ‚ôªÔ∏è Restore /docs node modules
      if: inputs.yarn-docs == 'true'
      uses: actions/cache@v2
      id: docs-modules-cache
      with:
        path: docs/node_modules
        key: ${{ runner.os }}-docs-modules-${{ hashFiles('docs/yarn.lock') }}
    - name: ‚ôªÔ∏è Restore Docs Next cache
      if: inputs.yarn-docs == 'true' && steps.docs-modules-cache.outputs.cache-hit == 'true'
      uses: actions/cache@v2
      with:
        path: docs/.next/cache
        key: ${{ runner.os }}-docs-next-${{ hashFiles('docs/yarn.lock') }}-${{ hashFiles('docs/next.config.js') }}

    - name: ‚ôªÔ∏è Restore ios/Pods from cache
      if: inputs.ios-pods == 'true'
      uses: actions/cache@v2
      id: ios-pods-cache
      with:
        path: ios/Pods
        key: ${{ runner.os }}-ios-pods-${{ hashFiles('ios/Podfile.lock') }}

    - name: ‚ôªÔ∏è Restore apps/bare-expo/ios/Pods from cache
      if: inputs.bare-expo-pods == 'true'
      uses: actions/cache@v2
      id: bare-expo-pods-cache
      with:
        path: apps/bare-expo/ios/Pods
        key: ${{ runner.os }}-bare-expo-pods-${{ hashFiles('apps/bare-expo/ios/Podfile.lock') }}

    - name: ‚ôªÔ∏è Restore Gradle cache
      if: inputs.avd == 'true' || inputs.ndk == 'true' || inputs.gradle == 'true'
      uses: gradle/gradle-build-action@v2

    - name: ‚ôªÔ∏è Restore AVD cache
      if: inputs.avd == 'true'
      uses: actions/cache@v2
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-${{ inputs.avd-api }}
    - name: üì± Create AVD and generate snapshot for caching
      if: inputs.avd == 'true' && steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ inputs.avd-api }}
        avd-name: avd-${{ matrix.api-level }}
        arch: x86_64
        force-avd-creation: false
        script: echo "Generated AVD snapshot for caching."

    - name: ‚ôªÔ∏è Restore Android NDK from cache
      if: inputs.ndk == 'true'
      uses: actions/cache@v2
      id: cache-android-ndk
      with:
        path: /usr/local/lib/android/sdk/ndk/${{ inputs.ndk-version }}/
        key: ${{ runner.os }}-ndk-${{ inputs.ndk-version }}
    - name: üõ† Install NDK if cache not present
      if: inputs.ndk == 'true' && steps.cache-android-ndk.outputs.cache-hit != 'true'
      shell: bash
      run: sudo $ANDROID_SDK_ROOT/tools/bin/sdkmanager --install "ndk;${{ inputs.ndk-version }}"

    - name: üîçÔ∏è Get cache key of Git LFS files
      if: inputs.git-lfs == 'true'
      id: git-lfs
      run: echo "::set-output name=sha256::$(git lfs ls-files | openssl dgst -sha256)"
      shell: bash
    - name: ‚ôªÔ∏è Restore Git LFS cache
      uses: actions/cache@v2
      if: inputs.git-lfs == 'true'
      with:
        path: .git/lfs
        key: ${{ steps.git-lfs.outputs.sha256 }}
